{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","hooks/use-httpRequest.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","useRequest","useState","isLoading","setIsLoading","setError","sendHttp","useCallback","requestType","applyData","a","fetch","url","method","body","JSON","stringify","header","response","ok","Error","json","data","message","NewTask","createTask","taskText","createdTask","name","onAddTask","enterTaskHandler","headers","bind","App","tasks","setTasks","useEffect","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aff65c59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QN43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1rhm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2nBq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__31W-N\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n  \n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n    taskInputRef.current.value = '';\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState, useCallback } from 'react';\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendHttp = useCallback(async (requestType,applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        requestType.url, {\n          method: requestType.method ? requestType.method : 'GET',\n          body: requestType.body ? JSON.stringify(requestType.body) : null,\n          header: requestType.header ? requestType.header : {},\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  },[]);\n\n  return {\n    isLoading,\n    error,\n    sendHttp\n  };\n}\n\nexport default useRequest;","\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useRequest from '../../hooks/use-httpRequest';\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendHttp} = useRequest();\n\n  const createTask = (taskText) => {\n      const generatedId = taskText.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n  \n      props.onAddTask(createdTask);\n  }\n\n  const enterTaskHandler = async (taskText) => {\n    sendHttp({\n      url:'https://react-http-request-proje-bdcd3-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      body: { text: taskText },\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }, createTask.bind(null,taskText));\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-6b4a6.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n  \n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n  \n    //   const data = await response.json();\n  \n      \n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useRequest from './hooks/use-httpRequest';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const {isLoading,error, sendHttp} = useRequest();\n\n  useEffect(() => {\n    const applyMethod = (data) => {\n      const loadedTasks = [];\n  \n        for (const taskKey in data) {\n          loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n        }\n  \n        setTasks(loadedTasks);\n      };\n    sendHttp({url:'https://react-http-request-proje-bdcd3-default-rtdb.firebaseio.com/tasks.json'},applyMethod);\n  }, [sendHttp]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={sendHttp}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}